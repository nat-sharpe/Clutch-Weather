{"version":3,"sources":["components/Header.js","containers/SingleLocation.js","containers/EveryLocation.js","containers/AddLocation.js","App.js","index.js"],"names":["Header","react_default","a","createElement","href","target","rel","className","alt","src","SingleLocation","forecastOrInfo","toggleMessage","this","props","state","viewInfo","currentCondition","info","forEach","index","push","key","type","value","currentForecast","dayData","day","text","high","low","currentLocation","city","temp","onClick","toggleInfo","toggleLeft","viewEvery","toggleRight","Component","EveryLocation","_this","locationRows","locations","savedLocations","location","deleteButton","length","deleteLocation","uniqueId","viewSingle","concat","region","viewAdd","AddLocation","handleChange","event","inputCity","getMatches","clearSearch","_this2","matchRows","matchingCities","addNew","onChange","placeholder","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getWeather","fetch","then","data","json","parsedData","conditionData","query","results","channel","item","condition","astronomy","sunrise","sunset","wind","speed","atmosphere","humidity","setState","nextFourDays","forecast","dayArray","ii","toggleLocation","direction","nextIndex","currentIndex","newLocation","visiblePage","newArray","filter","localStorage","setItem","JSON","stringify","toConsumableArray","id","Math","random","toString","substr","Array","isArray","place","name","admin1","code","slice","country","content","checkStorage","getItem","parse","console","log","objectSpread","page","containers_SingleLocation","containers_EveryLocation","containers_AddLocation","components_Header","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bd7f200c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n\n    return (\n      <a href=\"https://www.driveclutch.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"header\">\n        <img className=\"logo\" alt=\"logo\" src=\"../../clutch-logo.png\"/>\n        <h3 className=\"title\">CLUTCH Weather</h3>\n      </a>\n    )\n};\n\nexport default Header;","import React, {Component} from 'react';\nimport './styles/single.css'\n\nclass SingleLocation extends Component {\n  render() {\n    let forecastOrInfo = [];\n    let toggleMessage = '';\n\n    if (this.props.state.viewInfo) {\n      const infoData = this.props.state.currentCondition.info;\n      toggleMessage = 'Forecast';\n      infoData.forEach((info, index) => {\n        forecastOrInfo.push(\n          <li className=\"info-row\" key={index}>\n            <p className=\"row-title\">{info.type}</p>\n            <h3 className=\"row-data\">{info.value}</h3>\n          </li>\n        )\n      });\n    } else {\n      const forecastData = this.props.state.currentForecast;\n      toggleMessage = 'More Data';\n      forecastData.forEach((dayData, index) => {\n        let day = (index === 0) ? 'Today' : dayData.day;\n        forecastOrInfo.push(\n          <li className=\"forecast-row\" key={index}>\n            <p className=\"row-day\">{day}</p>\n            <p className=\"row-weather\">{dayData.text}</p>\n            <p className=\"row-high\">{dayData.high}°</p>\n            <p className=\"row-low\">{dayData.low}°</p>\n          </li>\n        )\n      });\n    };\n\n    return (\n      <div className=\"single-main\">\n        <div className=\"current\">\n          <h2 className=\"current-city\">{this.props.state.currentLocation.city}</h2>\n          <p className=\"current-weather\" >{this.props.state.currentCondition.text}</p>\n          <h1 className=\"current-temp\">{this.props.state.currentCondition.temp}</h1>\n        </div>\n        <hr className=\"line\"/>\n        <div className=\"forecast-or-info\">\n          {forecastOrInfo}\n        </div>\n        <div className=\"toggle-info\" onClick={this.props.toggleInfo}>\n          <h3>{toggleMessage}</h3>\n        </div>\n        <div className=\"footer\">\n          <div className=\"toggle-location\" onClick={this.props.toggleLeft}>\n            <h3>{'<'}</h3>\n          </div>  \n          <div className=\"view-every\" onClick={this.props.viewEvery}>\n            <h3>Your Locations</h3>\n          </div> \n          <div className=\"toggle-location\" onClick={this.props.toggleRight}>\n            <h3>{'>'}</h3>\n          </div>  \n        </div>\n      </div>\n    );\n  };\n};\n\nexport default SingleLocation;","import React, {Component} from 'react';\nimport './styles/every.css';\n\nclass EveryLocation extends Component {\n  render() {\n\n    const locationRows = [];\n    const locations = this.props.state.savedLocations;\n\n    locations.forEach((location, index) => {\n      const handleView = () => this.props.viewSingle(index);\n      const handleDelete = () => this.props.deleteLocation(location.uniqueId);\n\n      const deleteButton = \n        (locations.length > 1) ? \n        <div className=\"row-delete\" onClick={handleDelete}><h3>X</h3></div> :\n        null;\n\n      locationRows.push(\n        <li className=\"locations-row\" key={index}>\n          <h3 className=\"row-city\" onClick={handleView}>{`${location.city}, ${location.region}`}</h3>\n          {deleteButton}\n        </li>\n      )\n    });\n\n    return (\n      <div className=\"every-main\">\n        <div className=\"locations\">\n          {locationRows}\n        </div>\n        <div className=\"footer\">  \n          <div className=\"view-add-big\" onClick={this.props.viewAdd}>\n            <h3>Add</h3>\n          </div> \n        </div>\n      </div>\n    );\n  };\n};\n\nexport default EveryLocation;","import React, {Component} from 'react';\nimport './styles/add.css';\n\nclass AddLocation extends Component {\n      \n  handleChange = (event) => {\n    const inputCity = event.target.value;\n    if (inputCity.length > 1) {\n      this.props.getMatches(inputCity) \n    } else if (inputCity.length < 1) {\n      this.props.clearSearch();\n    };\n  };\n\n  render () {\n\n    const matchRows = [];\n    const matches = this.props.state.matchingCities;\n\n    matches.forEach((location, index) => {\n      const handleAdd = () => this.props.addNew(location);\n\n      matchRows.push(\n        <li className=\"locations-row\" key={`${location.city}${index}`}>\n          <p className=\"row-city\" onClick={handleAdd}>{`${location.city}, ${location.region}`}</p>\n        </li>\n      )\n    });\n\n    return (\n      <div className=\"add-main\">\n        <form className=\"search\">\n          <input\n            className=\"search-input\"\n            type=\"text\"\n            onChange={event => this.handleChange(event)}\n            placeholder=\"Search by US City\"\n          />\n        </form>\n        <div className=\"locations\">\n          {matchRows}\n        </div>\n        <div className=\"footer\">  \n          <div className=\"view-every-big\" onClick={this.props.viewEvery}>\n            <h3>Your Locations</h3>\n          </div> \n        </div>\n      </div>\n    )\n  }\n};\n\nexport default AddLocation;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport SingleLocation from './containers/SingleLocation';\nimport EveryLocation from './containers/EveryLocation';\nimport AddLocation from './containers/AddLocation';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedLocations: [],\n      currentLocation: {},\n      currentCondition: {},\n      currentForecast: [],\n      visiblePage: 'single',\n      matchingCities: [],\n      viewInfo: false\n    };\n  };\n\n  getWeather = () => {\n    fetch(`https://query.yahooapis.com/v1/public/yql?q=select * from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"${this.state.currentLocation.city}, ${this.state.currentLocation.region}\")&format=json`)\n    .then(data => {\n      const jsonResult = data.json();\n      jsonResult.then(parsedData => {\n        const conditionData = {\n          city: parsedData.query.results.channel.location.city,\n          text: parsedData.query.results.channel.item.condition.text,\n          temp: `${parsedData.query.results.channel.item.condition.temp}°`,\n          info: [\n            {type: 'Sunrise',\n            value: parsedData.query.results.channel.astronomy.sunrise},\n            {type: 'Sunset',\n            value: parsedData.query.results.channel.astronomy.sunset},\n            {type: 'Wind',\n            value: `${parsedData.query.results.channel.wind.speed} mph`},\n            {type: 'Humidity',\n            value: `${parsedData.query.results.channel.atmosphere.humidity}%`}\n          ]\n        };\n\n        this.setState({\n          currentCondition: conditionData\n        });\n        const nextFourDays = parsedData.query.results.channel.item.forecast;\n        let dayArray = [];\n        for (let ii = 0; ii < 4; ii++) {\n          let dayData = {\n            day: nextFourDays[ii].day,\n            text: nextFourDays[ii].text,     \n            high: nextFourDays[ii].high,\n            low: nextFourDays[ii].low\n          };\n          dayArray.push(dayData);\n        };\n        this.setState({\n          currentForecast: dayArray\n        }); \n      });\n    }) \n  };\n\n  componentDidMount() {\n    const checkStorage = localStorage.getItem('saved-locations');\n    let savedLocations = [];\n    if (checkStorage) {\n      savedLocations = JSON.parse(checkStorage);\n    } else {\n      savedLocations = [\n        {\n          city: 'Atlanta',\n          region: 'GA',\n          uniqueId: 'default_location'\n        }\n      ];\n    };\n    console.log(savedLocations)\n    this.setState({\n      savedLocations: savedLocations,\n      currentLocation: {\n        ...savedLocations[0],\n        index: 0\n      }\n    }, \n    () => {\n      this.getWeather();\n    });\n  };\n\n  toggleLocation = (direction) => {\n  \n    const currentIndex = this.state.currentLocation.index;\n    let nextIndex; \n\n    if (direction === 'left') {\n      nextIndex = (currentIndex === 0) ? this.state.savedLocations.length - 1 : currentIndex - 1; \n    } else if (direction === 'right') {\n      nextIndex = (currentIndex === this.state.savedLocations.length - 1) ? 0 : currentIndex + 1; \n    }\n\n    const newLocation = {\n      city: this.state.savedLocations[nextIndex].city,\n      region: this.state.savedLocations[nextIndex].region,\n      index: nextIndex\n    };\n    this.setState({ \n      currentLocation: newLocation,\n      viewInfo: false\n    }, \n      this.getWeather);\n  };\n\n  toggleLeft = () => {\n    this.toggleLocation('left');\n  };\n\n  toggleRight = () => {\n    this.toggleLocation('right');\n  };\n\n  viewEvery = () => {\n    this.setState({ \n      visiblePage: 'every',\n      viewInfo: false\n    })\n  };\n\n  viewSingle = index => {\n    const location = this.state.savedLocations[index];\n    this.setState({\n      visiblePage: 'single',\n      currentLocation: {\n        city: location.city,\n        region: location.region,\n        index: index,\n      }\n    }, () => this.getWeather());\n  };\n\n  viewAdd = () => {\n    this.setState({\n      visiblePage: 'add',\n    });\n  };\n\n  deleteLocation = uniqueId => {\n    const newArray = this.state.savedLocations.filter(location => location.uniqueId !== uniqueId);\n    this.setState({\n      savedLocations: newArray\n    }, () => localStorage.setItem('saved-locations', JSON.stringify(this.state.savedLocations)));\n  };\n\n  addNew = location => {\n    this.setState({\n      visiblePage: 'every',\n      matchingCities: [],\n      savedLocations: [...this.state.savedLocations, location],\n      currentLocation: {\n        city: location.city,\n        region: location.region,\n        id: location.uniqueId,\n        index: this.state.savedLocations.length\n      }\n    }, () => {\n      localStorage.setItem('saved-locations', JSON.stringify(this.state.savedLocations));\n      this.getWeather();\n    });\n  };\n\n  getMatches = (inputCity) => {\n    fetch(`https://query.yahooapis.com/v1/public/yql?q=select * from geo.places(all) where text=\"${inputCity}*\" and country = \"United States\"&format=json`)\n    .then(data => {\n      const jsonResult = data.json();\n      jsonResult.then(parsedData => {\n        let matchingCities = [];\n        const results = parsedData.query.results;\n        let uniqueId = 'id-city' + Math.random().toString(36).substr(2, 16);\n        if (results && Array.isArray(results.place)) {\n          results.place.forEach(place => {\n            matchingCities.push({\n              city: place.name,\n              region: (place.admin1 && place.admin1.code !== '') ? place.admin1.code.slice(3) : place.country.content,\n              uniqueId: uniqueId\n            });\n          });\n        } else if (results && results.place) {\n          matchingCities.push({\n            city: results.place.name,\n            region: (results.place.admin1 && results.place.admin1.code !== '') ? results.place.admin1.code.slice(3) : results.place.country.content,\n            uniqueId: uniqueId\n          });\n        }\n        this.setState({\n          matchingCities: matchingCities\n        })\n      })\n    }); \n  };\n\n  clearSearch = () => {\n    this.setState({\n      matchingCities: []\n    });\n  };\n\n  toggleInfo = () => {\n    this.setState({\n      viewInfo: !this.state.viewInfo,\n    })\n  };\n\n  render() {\n    let page;\n    if (this.state.visiblePage === 'single') {\n      page = <SingleLocation \n        state={this.state} \n        toggleLeft={this.toggleLeft}\n        toggleRight={this.toggleRight}  \n        viewEvery={this.viewEvery}\n        toggleInfo={this.toggleInfo} \n      />\n    } else if (this.state.visiblePage === 'every') {\n      page = <EveryLocation \n        state={this.state} \n        deleteLocation={this.deleteLocation} \n        viewSingle={this.viewSingle}\n        viewAdd={this.viewAdd}\n      />\n    } else if (this.state.visiblePage === 'add') {\n      page = <AddLocation \n        state={this.state}\n        getMatches={this.getMatches} \n        clearSearch={this.clearSearch} \n        addNew={this.addNew}\n        viewEvery={this.viewEvery}\n      />\n    };\n\n    return (\n      <div className='app'>\n        <Header />\n        {page}\n      </div>\n    )\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}